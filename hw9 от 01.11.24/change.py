'''Шифр простой замены. Поздравляем с расшифровкой раздела! 
Итак, вы догадались почему шифр Цезаря не является криптостойким: слишком мала мощность множества ключей и нужный ключ легко найти методом полного перебора. 
Можно ли увеличить криптостойкость, не меняя метод шифрования? Да, можно. Если заменять один символ алфавита на определённый другой символ того же алфавита
по какой-то таблице замен, то сама таблица замен и является ключом.
Множество ключей — это множество возможных таблиц простых замен. Для русского алфавита
мощность множества таблиц простых замен равна факториалу от 33: 33! = 8683317618811886495518194401280000000.
Если тратить на проверку одного варианта 0.000001 секунды, получится 2.8e+23 лет. 
Может показаться, что шифр простой замены вполне криптостойкий, однако это не так. 
Его достаточно просто взломать при помощи [частотного анализа]. Дело в том, 
что частота появления заданной буквы алфавита в достаточно длинных текстах одна 
и та же для разных текстов одного языка. Если в шифротексте будет символ с 
вероятностью появления, аналогичной стандартной для языка, то можно предположить, 
что он и является указанной зашифрованной буквой. Метод частотного криптоанализа 
известен с IX-го века, хотя наиболее известным случаем его применения в реальной жизни, 
возможно, является дешифровка египетских иероглифов в 1822 году. 
Итак, следующая часть работы зашифрована при помощи следующей программы:'''

class change:
    alphabet = "егпжонщюэбчмяхыцилдшарсйзвьёктфз"  # TODO
    alphabett = "шифрвженаткдльйоячёспгмзяхбцэуюы"
    def __init__(self):
        self._encode = dict()
        for i in range(len(self.alphabet)):
            letter = self.alphabett[i]
            encoded = self.alphabet[i]
            self._encode[letter] = encoded
            self._encode[letter.upper()] = encoded.upper()
        self._decode = {}  # TODO
        for i in range(len(self.alphabet)):
            letter = self.alphabet[i]
            encoded = self.alphabett[i]
            self._encode[letter] = encoded
            self._encode[letter.upper()] = encoded.upper()
    def encode(self, text):
        return ''.join([self._encode.get(char, char) for char in text])

    def decode(self, line):
        return ''.join([self._encode.get(char, char) for char in line])


cipher = change()

line = """Вгбхгтяяё цюс йтдебеабхб татюыът дючцёче атвыдтео дтябдебсечюоаб. Ёдвчзбф!

Егпж Огнщющжэ (ацягэяпэогбюцы йэсщюз)

Мэяхющыегс ажцмцянщюгщс егпжцо ажцшбцы йэсщюз иояищбши сюцрцэяпэогбюзщ егпжз. Эьт Эях-Чгюмг о шоцгв жэьцбэв ацчэйэя, лбц цьзлюзщ сцюцэяпэогбюзщ егпжз мцоцяхюц-бэчг ажцшбц ацммэфбши лэшбцбюцст чжгабцэюэягйт г ащжозс ажщмяцнгя гшацяхйцоэбх сюцрцэяпэогбюзщ егпжз. О Щожцащ бэчгщ егпжз ьзяг оащжозщ цагшэюз о 1467 рцмт гбэяхиюшчгс эжвгбщчбцжцс Ящцю Ьэббгшбэ Эяхьщжбг. О XVI ощчщ ющсщёчгы эььэб Гцрэюю Бжгбщсгы о шоцщы чюгрщ “Шбщюцржэпги” ажщмшбэогя швщст ацягэяпэогбюцрц егпжцоэюги о огмщ бэьягёз. Ьцящщ шяцнюзы оэжгэюб ш гшацяхйцоэюгщс шсщеэююзв эяпэогбцо ьзя цагшэю о 1563 рцмт Мнэсьэббгшбэ мщяяэ Ацжбэ о щрц чюгрщ “Ажц шчжзбтф йюэлгсцшбх цбмщяхюзв ьтчо”. Ацшящмюгс шяцоцс о жэйогбгг ацягэяпэогбюзв егпжцо сцнюц шлгбэбх жцбцжюзщ сэегюз, ажгсщжцс чцбцжцы сцнюц шлгбэбх ющсщёчтф сэегют Enigma, жэйжэьцбэююэи о 1917 р. Штбх ацягэяпэогбюзв егпжцо йэчяфлщюэ о сюцрцчжэбюцс ажгсщющюгг жэйяглюзв егпжцо ажцшбцы йэсщюз ч цажщмщящююцст лгшят ьтчо егпжтщсцрц бщчшбэ. Бц щшбх ч чэнмцы ьтчощ ац цбмщяхюцшбг ажгсщюищбши цмгю гй егпжцо ажцшбцы йэсщюз.

Егпж Огнщющжэ шцшбцгб гй ацшящмцоэбщяхюцшбг ющшчцяхчгв егпжцо Ёщйэжи ш жэйяглюзсг йюэлщюгисг шмогрэ. Мяи йэегпжцозоэюги сцнщб гшацяхйцоэбхши бэьягёэ эяпэогбцо, юэйзоэщсэи чоэмжэб (бэьягёэ) Огнщющжэ. Ажгсщюгбщяхюц ч жтшшчцст эяпэогбт бэьягёэ Огнщющжэ шцшбэояищбши гй шбжцч ац 33 шгсоцяцо, ажглдс чэнмэи шящмтфъэи шбжцчэ шмогрэщбши юэ ющшчцяхчц ацйгёгы. Бэчгс цьжэйцс, о бэьягёщ ацятлэщбши 33 жэйяглюзв егпжцо Ёщйэжи. Юэ жэйюзв кбэаэв чцмгжцочг егпж Огнщющжэ гшацяхйтщб жэйяглюзщ эяпэогбз гй кбцы бэьягёз. Юэ чэнмцс кбэащ егпжцоэюги гшацяхйтфбши жэйяглюзщ эяпэогбз, озьгжэщсзщ о йэогшгсцшбг цб шгсоцяэ чяфлщоцрц шяцоэ. Юэажгсщж, щшяг чяфлщоцщ шяцоц “ШЭБ”, бц ащжоэи ьтчоэ цбчжзбцрц бщчшбэ егпжтщбши ш гшацяхйцоэюгщс эяпэогбэ “Ш’, обцжэи “Э”, бжщбхи “Б”, лщбоджбэи шюцоэ “Ш” г бэч мэящщ.

Ажцржэссэ егпжцоэюги егпжцс Огнщющжэ:

Ацшящмюгы жэймщя жэьцбз йэегпжцоэю егпжцс Огнщющжэ ш ющгйощшбюзс чцмцозс шяцоцс.
Ацмшчэйчэ мяи шэсзв шбцычгв чжгабцэюэягбгчцо: мягюэ чцмцоцрц шяцоэ 8.

йэряэоюэи ьтчоэ
"""
print(cipher.decode(line))